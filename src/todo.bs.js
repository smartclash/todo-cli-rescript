// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Os = require("os");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

var helpString = "Usage :-\n$ ./todo add \"todo item\"  # Add a new todo\n$ ./todo ls               # Show remaining todos\n$ ./todo del NUMBER       # Delete a todo\n$ ./todo done NUMBER      # Complete a todo\n$ ./todo help             # Show usage\n$ ./todo report           # Statistics";

var getToday = (function() {
  let date = new Date();
  return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))
    .toISOString()
    .split("T")[0];
});

var encoding = "utf8";

var argv = process.argv;

var command = Caml_array.get(argv, 2);

var arg = Caml_array.get(argv, 3);

var todoFileName = "todo.txt";

function isEmpty(text) {
  return text.trim().length > 0;
}

function help(param) {
  console.log(helpString);
  
}

function readFile(param) {
  if (!Fs.existsSync(todoFileName)) {
    return [];
  }
  var text = Fs.readFileSync(todoFileName, {
        encoding: encoding,
        flag: "r"
      });
  return text.split(Os.EOL);
}

function appendToFile(text) {
  Fs.appendFileSync(todoFileName, text, {
        encoding: encoding,
        flag: "a+"
      });
  
}

if (isEmpty(command)) {
  console.log(helpString);
} else {
  var match = command.trim().toLowerCase();
  switch (match) {
    case "add" :
        console.log("add");
        break;
    case "del" :
        console.log("del");
        break;
    case "done" :
        console.log("done");
        break;
    case "help" :
        console.log("help");
        break;
    case "ls" :
        console.log("ls");
        break;
    case "report" :
        console.log("report");
        break;
    default:
      console.log(helpString);
  }
}

exports.helpString = helpString;
exports.getToday = getToday;
exports.encoding = encoding;
exports.argv = argv;
exports.command = command;
exports.arg = arg;
exports.todoFileName = todoFileName;
exports.isEmpty = isEmpty;
exports.help = help;
exports.readFile = readFile;
exports.appendToFile = appendToFile;
/* argv Not a pure module */
